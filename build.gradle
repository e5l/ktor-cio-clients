buildscript {
    ext.kotlin_version = '1.2.41'
    ext.ktor_version = '0.9.2'
    ext.kotlinx_coroutines = '0.22.3'

    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'

    group 'com.soywiz.io.ktor'
    version '0.0.6'

    sourceCompatibility = 1.8
    compileKotlin.kotlinOptions.jvmTarget = "1.8"
    compileTestKotlin.kotlinOptions.jvmTarget = "1.8"

    kotlin.experimental.coroutines "enable"

    sourceSets {
        main.kotlin.srcDirs = ['src']
        test.kotlin.srcDirs = ['test']
        main.resources.srcDirs = ['resources']
        test.resources.srcDirs = ['testresources']
    }

    repositories {
        mavenCentral()
        maven { url "https://dl.bintray.com/kotlin/kotlinx" }
        maven { url "https://dl.bintray.com/kotlin/ktor" }
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        testCompile "junit:junit:4.12"
        testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    }

    tasks.withType(Test) {
        testLogging {
            showStandardStreams = true
            events "passed", "failed"
        }
    }

    task(type: Jar, 'javadocJar') {
        classifier = 'javadoc'
        from 'build/docs/javadoc'
    }

    task(type: Jar, 'sourcesJar') {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar
        archives sourcesJar
    }

    publishing {
        publications {
            MyPublication(MavenPublication) {
                from components.java
                groupId project.group
                artifactId project.name
                version "$project.version"
            }
        }
    }

    if (rootProject.hasProperty('BINTRAY_USER') && rootProject.hasProperty('BINTRAY_KEY')) {
        bintray {
            user = rootProject.property('BINTRAY_USER')
            key = rootProject.property('BINTRAY_KEY')
            publications = ['MyPublication']
            publish = true
            override = true

            pkg {
                repo = "soywiz"
                name = "ktor-cio-clients"
                userOrg = 'soywiz'
                licenses = ['Apache-2.0']
                vcsUrl = 'https://github.com/soywiz/ktor-cio-clients.git'
            }
        }

        task deploy(dependsOn: bintrayUpload) {
        }
    }
}
